Things to do for piuparts
=========================

for 0.36:

- report:
 - refactor code, search for FIXME
  - esp. these new maintainer packages...
 - maintainer-pages: 
  - assemble maintainer pages differently, to be able to sort them alphabetically + by section
  - http://piuparts.debian.org/source/a/awesome.html links to awesome-extra logs
  - http://piuparts.debian.org/source/a/awesome.html should display bugged logs
 - http://piuparts.debian.org/sid/state-dependency-does-not-exist.html:
   "dependency unknown package is unknown-package"
 - sources.txt should not be calculated where it currently is (or maybe yes..)
 - packages.txt for binary packages
 - get rid of old log pages and put stats in the index page
 - do fancy R graphs with the data from $distro/counts.txt
  - also per state

- take care of old conf files on upgrades
	/etc/piuparts/piuparts-master.conf
	/etc/piuparts/piuparts-slave.conf

- ~piupartsm/bin/report_untestable_packages: moving to untestable/archive/ causes problems, so disabled for now.

once 0.36 is released:

- integration with packages.qa.debian.org
- announcement on d-d-a

for 0.37:

- probably include patch for #523950
- probably include patch for #519192 - not sure if i like that aproach

- piuparts-slave: if chroot.tgz is older than N hours, regenerate it

- master:
 - write stats about number of daily tests (-> report: create fancy graphs)

- untestable packages are not recognicable as such, see http://piuparts.debian.org/source/a/apache2.html 
  atm. (log is N/A, even though its there, even if empty) - http://piuparts.debian.org/sid/state-cannot-be-tested.html
  aint helpful neither.

- report:
 - write stats about the reasons for failures:
  - installation hangs and uses all cpu when installing with 
    DEBIAN_FRONTEND="noninteractive"
  - owned and unowned files after purge (policy 6.8 + 10.7.3)
  - files owned by two or more packages are not removed by dpkg, these should be ignored.
    eg, "/etc/php5	 owned by: php5-cgi, php5-common" from http://piuparts.debian.org/squeeze/fail/php5-cgi_5.2.6.dfsg.1-3.log
  - prompts without using debconf (#206684 is pending, will be in policy 3.8.2)
  - left-over processes (10.7.3)
  - "E: Broken packages" - often indicates a problem with the archive at the
    time of testing, not with the package being tested
  - "/var/lib/dpkg/info/.*.postinst: .* command not found" - missing depends
  - "/var/lib/dpkg/info/.*.postrm: .* command not found" - missing depends or
    using non-essential packages in purge
  - unclassified
 - write stats for total number of logs (when a package has more than a log 
   in fail/ or bugged/)
 - RSS feeds of logs
 - include pts state (as an icon) in source summary pages
 - logs from binNMUs are sorted incorrectly in the source pages 
   (see for exsample http://piuparts.debian.org/source/i/icewm.html)

- expire old logs a month after testing if newer logs exists (except if the new log is fail
  and the old is bugged, then the fail log should be moved to bugged first)

- create emacspeak-broken-dpkg-preconfigure package for broken repo. (then later
  put more broken packages in there and use that for testing piuparts)

- monitor:
 - write slave-watcher to monitor hanging processes, eg. looping dpkg-preconfigure
 - Check for and kill extraneous processes afterwards. Perhaps by checking
   whether their working directory is in the chroot.
   Introduce a whitelist of processes to wait for and assume it's an error 
   if those haven't been killed after $time=10min. see #387428
 - master.log grows to fast and there is no mechanism to stop it

- slave_run: cleanup stale proc mountpoints

- split the failed state into several problem-type failed states

- the templates used by update-reports.py should be taken from /etc/piuparts/templates/
  and not be included in the python source

- write reportbug wrapper for mass bug filing (start simple, make it more sophisticated 
  in 0.38)

- publish FAI classes to setup piuparts.$fqdn automatically 

- a redirect of http://piuparts.d.o/foo to http://p.d.o/source/f/foo.html would be nice

- release 0.37 before debconf9

for 0.38 and on:

- multi-arch:
 - piuparts-report should have a list of available arch and list packages 
   only available on untested archs in a new state "(depends-)not-available-on-tested-archs"
 - master should (per default) only schedule packages which are not available 
   on the master arch to slaves of different archs -> "schedule-evenly-to-slaves = no"

- piuparts can't currently test upgrades of required packages. (Because they
  cannot be removed, it assumes these are untestable, which is only true for
  removal tests...

- find_default_debian_mirrors: if parts[2] contains a / (think
  stable/updates for security.d.o), you can't ignore this, it will break
  later...

- support for extra-packages-url (for volatile, security, etc)

- not sure if it's a sensible thing to to, but provide a way to turn of debugging
  output for piuparts.py

- piuparts can't currently test postfix, since installing postfix removes
  exim and removing postfix would require re-installing exim, and that
  doesn't happen; there's other packages like that, too

- mounting /proc and perhaps others (usbfs, sysfs, /dev/pts, etc.) in
  the chroot might be a good idea because some packages might need this.
  Interestingly enough this currently seems to prevent start-stop-daemon
  from starting any daemons ;)

- binary packages which have been binNMUed are shown with the wrong version 
  number on the package pages. this is just a problem in reporting, not in 
  testing. PackagesDB.get_source_package() gives back the right value, but 
  piuparts-reports does not care.

Low priority stuff (a.k.a. "nobody's said they must have it now")
-----------------------------------------------------------------

* move shell cronjobs functionality into master, slave & report

* make it possible to call aptitude (or similar) instead of apt-get and 
  allow to override the commandline arguments of the used program (to be 
  able to test with and without recommended packages or authentication).

* Kill children after a timeout to make sure the test doesn't run forever.

* #522913: include a test to see which packages which modify their own conffiles 
  so the user is presented with a dpkg conffile changed dialogue during
  the upgrade.  It would also be very interesting to see how many packages
  leave behind orphaned conffiles after purging a newer version which does
  not contain the files anymore.

* Bill Allombert: Does piupart test whether packages trigger useless
  conffiles handling ? (i.e. dpkg pretend you have modified a conffile
  when it has not) this is one kind of bugs I would really get rid of.
  h01ger: #466118 sounds like it does.

* deal with packages that need to replace higher priority packages
  (which then need to be put back when the package is removed)

* piuparts-slave: keep track of reservations permanently
* piuparts-master: keep track of whom a reservation is made
* piuparts-slave: timestamps to log messages
* piuparts-slave: make the chroot more minimial
* piuparts: upgrade the chroot before taking a snapshot of its files
