#!/bin/bash

# Copyright 2009-2010 Holger Levsen (holger@layer-acht.org)
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
# Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

#
# parse config file
#

[ -e /etc/piuparts/piuparts.conf ] || exit 0
TEMPFILE=`mktemp`
egrep "(^sections|^master-directory)" /etc/piuparts/piuparts.conf| sed -e "s# =#=#g" -e "s#= #=#g" -e 's#=#="#' -e 's#$#"#' -e "s#sections#SECTIONS#" -e "s#master-directory#MASTER#" > $TEMPFILE
source $TEMPFILE
rm $TEMPFILE
if [ -z "$MASTER" ] || [ -z "$SECTIONS" ] ; then
	echo "sections and/or master-directory not set in /etc/piuparts/piuparts.conf, exiting."
	exit 1
fi

#
# loop through all known problems
#
HTDOCS=/org/piuparts.debian.org/htdocs
LOGS=`mktemp`

# bash has some severe limitations, like no named arrays... :/
NR=0
for SECTION in $SECTIONS ; do 
	KNOWNLOGS[$NR]=`mktemp`
	cd $MASTER/$SECTION
	for problem in `ls ~/bin/known_problems` ; do
		# source files to get COMMAND, HELPTEXT and ISSUE
		source ~/bin/known_problems/$problem 				
		echo -n "$COMMAND" > $LOGS
		if [ -s $LOGS ] ; then 
			OUTPUT=$HTDOCS/$SECTION/${problem%.conf}.tpl
			echo '<table class="righttable"><tr class="titlerow"><td class="titlecell">' > $OUTPUT
			echo "$HEADER in $SECTION" >> $OUTPUT
			echo '</td></tr><tr class="normalrow"><td class="contentcell2">' >> $OUTPUT
			echo "$HELPTEXT" >> $OUTPUT
                        echo "<p>The commandline to find these logs is: <pre>" >> $OUTPUT
			grep --color=never COMMAND ~/bin/known_problems/$problem |sed -e "s#| #| \\ \n  #g" >> $OUTPUT
			echo "</pre></p>" >> $OUTPUT
			echo '</td></tr><tr class="titlerow"><td class="alerttitlecell">Please file bugs!</td></tr></tr><tr class="normalrow"><td class="contentcell2" colspan="3">' >> $OUTPUT
			echo "<ul>" >> $OUTPUT
			COUNT=0
			for LOG in $(cat $LOGS|sort) ; do
				PACKAGE=$(echo $LOG | cut -d "_" -f1|cut -d "/" -f2)
				LATEST=$(ls -tr1 --color=none $MASTER/$SECTION/fail/${PACKAGE}_* $MASTER/$SECTION/bugged/${PACKAGE}_* $MASTER/$SECTION/pass/${PACKAGE}_* 2>/dev/null|tail -1|cut -d "/" -f7)
				if [ "${problem%_error.conf}_error.conf" == "$problem" ] ; then 
					LATESTFAIL=$(ls -tr1 --color=none $MASTER/$SECTION/fail/${PACKAGE}_* $MASTER/$SECTION/bugged/${PACKAGE}_*  2>/dev/null|tail -1|cut -d "/" -f7-8)
					if [ "$LATEST" != "pass" ] && [ "$LATESTFAIL" == "$LOG" ] ; then 
						echo "<li><a href='/$SECTION/$LOG'>$LOG</a> (<a href=\"http://bugs.debian.org/$PACKAGE?dist=unstable\" target=\"_blank\">BTS</a>)</li>" >> $OUTPUT
						echo "$LOG" >> ${KNOWNLOGS[$NR]}
						let "COUNT += 1"
					fi
				else
					# this is an issue, not an error
					LATESTSUCCESS=$(ls -tr1 --color=none $MASTER/$SECTION/pass/${PACKAGE}_* 2>/dev/null|tail -1|cut -d "/" -f7-8)
					if [ "$LATEST" == "pass" ] && [ "$LATESTSUCCESS" == "$LOG" ] ; then 
						echo "<li><a href='/$SECTION/$LOG'>$LOG</a> (<a href=\"http://bugs.debian.org/$PACKAGE?dist=unstable\" target=\"_blank\">BTS</a>)</li>" >> $OUTPUT
						echo "$LOG" >> ${KNOWNLOGS[$NR]}
						let "COUNT += 1"
					fi 
				fi
			done
			echo "</ul>" >>$OUTPUT
			echo "<p>Affected packages in $SECTION: $COUNT</p></td></tr></table>" >> $OUTPUT
		else
			touch ${KNOWNLOGS[$NR]}
		fi
        done
	let "NR += 1"
done
rm $LOGS

#
# report unknown failures
#
UNKNOWNLOGS=`mktemp`

NR=0
for SECTION in $SECTIONS ; do 
	cd $MASTER/$SECTION
	find fail -name "*.log" > $LOGS
	grep -v -f ${KNOWNLOGS[$NR]} $LOGS > $UNKNOWNLOGS
	if [ -s $UNKNOWNLOGS ] ; then
		OUTPUT=$HTDOCS/$SECTION/unknown_failures.tpl
		echo '<table class="righttable"><tr class="titlerow"><td class="titlecell">' > $OUTPUT
		echo "Packages with failures not yet well known detected in $SECTION" >> $OUTPUT
		echo '</td></tr><tr class="normalrow"><td class="contentcell2">' >> $OUTPUT
		echo "<p>Please investigate and improve detection of known error types!</p>" >> $OUTPUT
		echo '</td></tr><tr class="titlerow"><td class="alerttitlecell">Please file bugs!</td></tr></tr><tr class="normalrow"><td class="contentcell2" colspan="3">' >> $OUTPUT
		COUNT=0
		echo "<ul>" >> $OUTPUT
		for LOG in $(cat $UNKNOWNLOGS|sort) ; do
			PACKAGE=$(echo $LOG | cut -d "_" -f1|cut -d "/" -f2)
			LATEST=$(ls -tr1 --color=none $MASTER/$SECTION/fail/${PACKAGE}_* $MASTER/$SECTION/bugged/${PACKAGE}_* $MASTER/$SECTION/pass/${PACKAGE}_* 2>/dev/null|tail -1|cut -d "/" -f7)
			LATESTFAIL=$(ls -tr1 --color=none $MASTER/$SECTION/fail/${PACKAGE}_* $MASTER/$SECTION/bugged/${PACKAGE}_*  2>/dev/null|tail -1|cut -d "/" -f7-8)
			if [ "$LATEST" != "pass" ] && [ "$LATESTFAIL" == "$LOG" ] ; then 
				echo "<li><a href='/$SECTION/$LOG'>$LOG</a> (<a href=\"http://bugs.debian.org/$PACKAGE?dist=unstable\" target=\"_blank\">BTS</a>)</li>" >> $OUTPUT
				let "COUNT += 1"
			fi
		done
		echo "</ul>" >> $OUTPUT
		echo "<p>Affected packages in $SECTION: $COUNT</p></td></tr></table>" >> $OUTPUT
	fi
	rm $LOGS ${KNOWNLOGS[$NR]} $UNKNOWNLOGS
	let "NR += 1"
done

