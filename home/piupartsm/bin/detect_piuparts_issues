#!/bin/sh

# Copyright 2009 Holger Levsen (holger@layer-acht.org)
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
# Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


PIUPARTS_CONF=${PIUPARTS_CONF:-/etc/piuparts/piuparts.conf}
[ -f "$PIUPARTS_CONF" ] || exit 0

# usage: get_config_value VARIABLE section key [default]
get_config_value()
{
	local section key value
	test -n "$1" && test "$1" = "$(echo "$1" | tr -c -d '[:alnum:]_')" || exit 1
	section="$2"
	key="$3"
	value="$(sed -rn '\#^\['"$section"'\]#,/^\[/ {/^'"$key"'\s*=/ {s/^'"$key"'\s*=\s*//; s/\s*$//; p}}' "$PIUPARTS_CONF")"
	test -n "$value" || value="$4"
	if [ -z "$value" ]; then
		echo "'$key' not set in section [$section] of $PIUPARTS_CONF, exiting." >&2
		exit 1
	fi
	eval "$1"='"$value"'
}

get_config_value MASTER global master-directory
get_config_value SECTIONS global sections


#
# detect piuparts problems
#

FILE=`mktemp`
for SECTION in $SECTIONS ; do 
	for subdir in fail bugged ; do
		rgrep -l -E "tar( \(child\))?: .*.tar.gz: Cannot open: No such file or directory" $MASTER/$SECTION/$subdir >> $FILE
		rgrep -l -e "gzip: stdin: invalid compressed data--crc error" $MASTER/$SECTION/$subdir >> $FILE
		rgrep -l -e "ERROR:.*:Temporary directory is not a directory" $MASTER/$SECTION/$subdir >> $FILE
		rgrep -l -e "^RuntimeError: maximum recursion depth exceeded while calling a Python object" $MASTER/$SECTION/$subdir >> $FILE
		rgrep -l -e "^Traceback" $MASTER/$SECTION/$subdir >> $FILE
		rgrep -l -e "^OSError:" $MASTER/$SECTION/$subdir >> $FILE
		rgrep -l -e "^IndentationError:" $MASTER/$SECTION/$subdir >> $FILE
		# Python errors from maintainer scripts etc. would be indented by 2 spaces, so don't match here.
	done
done
if [ -s $FILE ] ; then 
	echo "piuparts problem detected!"
	echo "(By grep'ing for 'tar: .*.tar.gz: Cannot open: No such file or directory'"
	echo "and for some python errors and tracebacks in failed logs.)"
	echo 
	echo "Please review the following logfiles/packages."
        echo "If it is always the same package failing, it's likely to be an issue in the"
	echo "package."
	echo
		sort -u $FILE | xargs rm -v
	echo
        echo "----------------------------------------------------------------------"
	echo
fi
rm $FILE
